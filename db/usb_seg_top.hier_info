|usb_seg_top
clk_sys => clk_sys.IN4
sys_reset_n => sys_reset_n.IN2
uart_rx => uart_rx.IN1
uart_tx << uart_tx_path:uart_tx_path_u.uart_tx_o
smg_data[0] << smg_interface:smg_interface_u.SMG_Data
smg_data[1] << smg_interface:smg_interface_u.SMG_Data
smg_data[2] << smg_interface:smg_interface_u.SMG_Data
smg_data[3] << smg_interface:smg_interface_u.SMG_Data
smg_data[4] << smg_interface:smg_interface_u.SMG_Data
smg_data[5] << smg_interface:smg_interface_u.SMG_Data
smg_data[6] << smg_interface:smg_interface_u.SMG_Data
smg_data[7] << smg_interface:smg_interface_u.SMG_Data
scan_sig[0] << smg_interface:smg_interface_u.Scan_Sig
scan_sig[1] << smg_interface:smg_interface_u.Scan_Sig
scan_sig[2] << smg_interface:smg_interface_u.Scan_Sig


|usb_seg_top|uart_rx_path:uart_rx_path_u
clk_i => bps_start.CLK
clk_i => state.CLK
clk_i => uart_rx_data_o_r1[0].CLK
clk_i => uart_rx_data_o_r1[1].CLK
clk_i => uart_rx_data_o_r1[2].CLK
clk_i => uart_rx_data_o_r1[3].CLK
clk_i => uart_rx_data_o_r1[4].CLK
clk_i => uart_rx_data_o_r1[5].CLK
clk_i => uart_rx_data_o_r1[6].CLK
clk_i => uart_rx_data_o_r1[7].CLK
clk_i => uart_rx_data_o_r0[0].CLK
clk_i => uart_rx_data_o_r0[1].CLK
clk_i => uart_rx_data_o_r0[2].CLK
clk_i => uart_rx_data_o_r0[3].CLK
clk_i => uart_rx_data_o_r0[4].CLK
clk_i => uart_rx_data_o_r0[5].CLK
clk_i => uart_rx_data_o_r0[6].CLK
clk_i => uart_rx_data_o_r0[7].CLK
clk_i => bit_num[0].CLK
clk_i => bit_num[1].CLK
clk_i => bit_num[2].CLK
clk_i => bit_num[3].CLK
clk_i => uart_rx_done_r.CLK
clk_i => uart_rx_i_r[0].CLK
clk_i => uart_rx_i_r[1].CLK
clk_i => uart_rx_i_r[2].CLK
clk_i => uart_rx_i_r[3].CLK
clk_i => uart_rx_i_r[4].CLK
clk_i => baud_div[0].CLK
clk_i => baud_div[1].CLK
clk_i => baud_div[2].CLK
clk_i => baud_div[3].CLK
clk_i => baud_div[4].CLK
clk_i => baud_div[5].CLK
clk_i => baud_div[6].CLK
clk_i => baud_div[7].CLK
clk_i => baud_div[8].CLK
clk_i => baud_div[9].CLK
clk_i => baud_div[10].CLK
clk_i => baud_div[11].CLK
clk_i => baud_div[12].CLK
clk_i => baud_bps.CLK
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_data_o_r0.DATAB
uart_rx_i => uart_rx_i_r[0].DATAIN
uart_rx_data_o[0] <= uart_rx_data_o_r1[0].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_data_o[1] <= uart_rx_data_o_r1[1].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_data_o[2] <= uart_rx_data_o_r1[2].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_data_o[3] <= uart_rx_data_o_r1[3].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_data_o[4] <= uart_rx_data_o_r1[4].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_data_o[5] <= uart_rx_data_o_r1[5].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_data_o[6] <= uart_rx_data_o_r1[6].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_data_o[7] <= uart_rx_data_o_r1[7].DB_MAX_OUTPUT_PORT_TYPE
uart_rx_done <= uart_rx_done_r.DB_MAX_OUTPUT_PORT_TYPE
baud_bps_tb <= baud_bps.DB_MAX_OUTPUT_PORT_TYPE


|usb_seg_top|uart_tx_path:uart_tx_path_u
clk_i => bit_num[0].CLK
clk_i => bit_num[1].CLK
clk_i => bit_num[2].CLK
clk_i => bit_num[3].CLK
clk_i => uart_tx_o_r.CLK
clk_i => send_data[0].CLK
clk_i => send_data[1].CLK
clk_i => send_data[2].CLK
clk_i => send_data[3].CLK
clk_i => send_data[4].CLK
clk_i => send_data[5].CLK
clk_i => send_data[6].CLK
clk_i => send_data[7].CLK
clk_i => send_data[8].CLK
clk_i => send_data[9].CLK
clk_i => uart_send_flag.CLK
clk_i => baud_div[0].CLK
clk_i => baud_div[1].CLK
clk_i => baud_div[2].CLK
clk_i => baud_div[3].CLK
clk_i => baud_div[4].CLK
clk_i => baud_div[5].CLK
clk_i => baud_div[6].CLK
clk_i => baud_div[7].CLK
clk_i => baud_div[8].CLK
clk_i => baud_div[9].CLK
clk_i => baud_div[10].CLK
clk_i => baud_div[11].CLK
clk_i => baud_div[12].CLK
clk_i => baud_bps.CLK
uart_tx_data_i[0] => send_data.DATAB
uart_tx_data_i[1] => send_data.DATAB
uart_tx_data_i[2] => send_data.DATAB
uart_tx_data_i[3] => send_data.DATAB
uart_tx_data_i[4] => send_data.DATAB
uart_tx_data_i[5] => send_data.DATAB
uart_tx_data_i[6] => send_data.DATAB
uart_tx_data_i[7] => send_data.DATAB
uart_tx_en_i => uart_send_flag.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_en_i => send_data.OUTPUTSELECT
uart_tx_o <= uart_tx_o_r.DB_MAX_OUTPUT_PORT_TYPE


|usb_seg_top|uart_control:uart_control_u
clk => clk.IN1
reset_n => reset_n.IN1
uart_data[0] => uart_data[0].IN1
uart_data[1] => uart_data[1].IN1
uart_data[2] => uart_data[2].IN1
uart_data[3] => uart_data[3].IN1
uart_data[4] => uart_data[4].IN1
uart_data[5] => uart_data[5].IN1
uart_data[6] => uart_data[6].IN1
uart_data[7] => uart_data[7].IN1
uart_control_en => uart_control_en.IN1
uart_control_out[0] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[1] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[2] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[3] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[4] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[5] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[6] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[7] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[8] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[9] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[10] <= Binary_to_BCD:comb_3.o_BCD
uart_control_out[11] <= Binary_to_BCD:comb_3.o_BCD
uart_control_done <= Binary_to_BCD:comb_3.o_DV


|usb_seg_top|uart_control:uart_control_u|Binary_to_BCD:comb_3
i_Clock => r_Digit_Index[0].CLK
i_Clock => r_Digit_Index[1].CLK
i_Clock => r_Digit_Index[2].CLK
i_Clock => r_Loop_Count[0].CLK
i_Clock => r_Loop_Count[1].CLK
i_Clock => r_Loop_Count[2].CLK
i_Clock => r_Loop_Count[3].CLK
i_Clock => r_Loop_Count[4].CLK
i_Clock => r_Loop_Count[5].CLK
i_Clock => r_Loop_Count[6].CLK
i_Clock => r_Loop_Count[7].CLK
i_Clock => r_Binary[0].CLK
i_Clock => r_Binary[1].CLK
i_Clock => r_Binary[2].CLK
i_Clock => r_Binary[3].CLK
i_Clock => r_Binary[4].CLK
i_Clock => r_Binary[5].CLK
i_Clock => r_Binary[6].CLK
i_Clock => r_Binary[7].CLK
i_Clock => r_DV.CLK
i_Clock => r_BCD[0].CLK
i_Clock => r_BCD[1].CLK
i_Clock => r_BCD[2].CLK
i_Clock => r_BCD[3].CLK
i_Clock => r_BCD[4].CLK
i_Clock => r_BCD[5].CLK
i_Clock => r_BCD[6].CLK
i_Clock => r_BCD[7].CLK
i_Clock => r_BCD[8].CLK
i_Clock => r_BCD[9].CLK
i_Clock => r_BCD[10].CLK
i_Clock => r_BCD[11].CLK
i_Clock => r_SM_Main~1.DATAIN
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_BCD.OUTPUTSELECT
reset_n => r_DV.OUTPUTSELECT
reset_n => r_SM_Main.OUTPUTSELECT
reset_n => r_SM_Main.OUTPUTSELECT
reset_n => r_SM_Main.OUTPUTSELECT
reset_n => r_SM_Main.OUTPUTSELECT
reset_n => r_SM_Main.OUTPUTSELECT
reset_n => r_SM_Main.OUTPUTSELECT
reset_n => r_Loop_Count[0].ENA
reset_n => r_Digit_Index[2].ENA
reset_n => r_Digit_Index[1].ENA
reset_n => r_Digit_Index[0].ENA
reset_n => r_Loop_Count[1].ENA
reset_n => r_Loop_Count[2].ENA
reset_n => r_Loop_Count[3].ENA
reset_n => r_Loop_Count[4].ENA
reset_n => r_Loop_Count[5].ENA
reset_n => r_Loop_Count[6].ENA
reset_n => r_Loop_Count[7].ENA
reset_n => r_Binary[0].ENA
reset_n => r_Binary[1].ENA
reset_n => r_Binary[2].ENA
reset_n => r_Binary[3].ENA
reset_n => r_Binary[4].ENA
reset_n => r_Binary[5].ENA
reset_n => r_Binary[6].ENA
reset_n => r_Binary[7].ENA
i_Binary[0] => r_Binary.DATAB
i_Binary[1] => r_Binary.DATAB
i_Binary[2] => r_Binary.DATAB
i_Binary[3] => r_Binary.DATAB
i_Binary[4] => r_Binary.DATAB
i_Binary[5] => r_Binary.DATAB
i_Binary[6] => r_Binary.DATAB
i_Binary[7] => r_Binary.DATAB
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_Binary.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => r_BCD.OUTPUTSELECT
i_Start => Selector21.IN3
i_Start => Selector20.IN2
o_BCD[0] <= r_BCD[0].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[1] <= r_BCD[1].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[2] <= r_BCD[2].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[3] <= r_BCD[3].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[4] <= r_BCD[4].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[5] <= r_BCD[5].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[6] <= r_BCD[6].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[7] <= r_BCD[7].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[8] <= r_BCD[8].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[9] <= r_BCD[9].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[10] <= r_BCD[10].DB_MAX_OUTPUT_PORT_TYPE
o_BCD[11] <= r_BCD[11].DB_MAX_OUTPUT_PORT_TYPE
o_DV <= r_DV.DB_MAX_OUTPUT_PORT_TYPE


|usb_seg_top|smg_interface:smg_interface_u
CLK => CLK.IN3
RSTn => RSTn.IN3
Number_Sig[0] => Number_Sig[0].IN1
Number_Sig[1] => Number_Sig[1].IN1
Number_Sig[2] => Number_Sig[2].IN1
Number_Sig[3] => Number_Sig[3].IN1
Number_Sig[4] => Number_Sig[4].IN1
Number_Sig[5] => Number_Sig[5].IN1
Number_Sig[6] => Number_Sig[6].IN1
Number_Sig[7] => Number_Sig[7].IN1
Number_Sig[8] => Number_Sig[8].IN1
Number_Sig[9] => Number_Sig[9].IN1
Number_Sig[10] => Number_Sig[10].IN1
Number_Sig[11] => Number_Sig[11].IN1
SMG_Data[0] <= smg_encode_module:U2.SMG_Data
SMG_Data[1] <= smg_encode_module:U2.SMG_Data
SMG_Data[2] <= smg_encode_module:U2.SMG_Data
SMG_Data[3] <= smg_encode_module:U2.SMG_Data
SMG_Data[4] <= smg_encode_module:U2.SMG_Data
SMG_Data[5] <= smg_encode_module:U2.SMG_Data
SMG_Data[6] <= smg_encode_module:U2.SMG_Data
SMG_Data[7] <= smg_encode_module:U2.SMG_Data
Scan_Sig[0] <= smg_scan_module:U3.Scan_Sig
Scan_Sig[1] <= smg_scan_module:U3.Scan_Sig
Scan_Sig[2] <= smg_scan_module:U3.Scan_Sig


|usb_seg_top|smg_interface:smg_interface_u|smg_control_module:U1
CLK => rNumber[0].CLK
CLK => rNumber[1].CLK
CLK => rNumber[2].CLK
CLK => rNumber[3].CLK
CLK => i[0].CLK
CLK => i[1].CLK
CLK => i[2].CLK
CLK => i[3].CLK
CLK => C1[0].CLK
CLK => C1[1].CLK
CLK => C1[2].CLK
CLK => C1[3].CLK
CLK => C1[4].CLK
CLK => C1[5].CLK
CLK => C1[6].CLK
CLK => C1[7].CLK
CLK => C1[8].CLK
CLK => C1[9].CLK
CLK => C1[10].CLK
CLK => C1[11].CLK
CLK => C1[12].CLK
CLK => C1[13].CLK
CLK => C1[14].CLK
CLK => C1[15].CLK
RSTn => C1[0].ACLR
RSTn => C1[1].ACLR
RSTn => C1[2].ACLR
RSTn => C1[3].ACLR
RSTn => C1[4].ACLR
RSTn => C1[5].ACLR
RSTn => C1[6].ACLR
RSTn => C1[7].ACLR
RSTn => C1[8].ACLR
RSTn => C1[9].ACLR
RSTn => C1[10].ACLR
RSTn => C1[11].ACLR
RSTn => C1[12].ACLR
RSTn => C1[13].ACLR
RSTn => C1[14].ACLR
RSTn => C1[15].ACLR
RSTn => rNumber[0].ACLR
RSTn => rNumber[1].ACLR
RSTn => rNumber[2].ACLR
RSTn => rNumber[3].ACLR
RSTn => i[0].ACLR
RSTn => i[1].ACLR
RSTn => i[2].ACLR
RSTn => i[3].ACLR
Number_Sig[0] => rNumber.DATAA
Number_Sig[1] => rNumber.DATAA
Number_Sig[2] => rNumber.DATAA
Number_Sig[3] => rNumber.DATAA
Number_Sig[4] => rNumber.DATAA
Number_Sig[5] => rNumber.DATAA
Number_Sig[6] => rNumber.DATAA
Number_Sig[7] => rNumber.DATAA
Number_Sig[8] => rNumber.DATAA
Number_Sig[9] => rNumber.DATAA
Number_Sig[10] => rNumber.DATAA
Number_Sig[11] => rNumber.DATAA
Number_Data[0] <= rNumber[0].DB_MAX_OUTPUT_PORT_TYPE
Number_Data[1] <= rNumber[1].DB_MAX_OUTPUT_PORT_TYPE
Number_Data[2] <= rNumber[2].DB_MAX_OUTPUT_PORT_TYPE
Number_Data[3] <= rNumber[3].DB_MAX_OUTPUT_PORT_TYPE


|usb_seg_top|smg_interface:smg_interface_u|smg_encode_module:U2
CLK => rSMG[0].CLK
CLK => rSMG[1].CLK
CLK => rSMG[2].CLK
CLK => rSMG[3].CLK
CLK => rSMG[4].CLK
CLK => rSMG[5].CLK
CLK => rSMG[6].CLK
CLK => rSMG[7].CLK
RSTn => rSMG[0].PRESET
RSTn => rSMG[1].PRESET
RSTn => rSMG[2].PRESET
RSTn => rSMG[3].PRESET
RSTn => rSMG[4].PRESET
RSTn => rSMG[5].PRESET
RSTn => rSMG[6].PRESET
RSTn => rSMG[7].PRESET
Number_Data[0] => Mux0.IN13
Number_Data[0] => Mux1.IN13
Number_Data[0] => Mux2.IN13
Number_Data[0] => Mux3.IN13
Number_Data[0] => Mux4.IN13
Number_Data[0] => Mux5.IN13
Number_Data[0] => Mux6.IN13
Number_Data[1] => Decoder0.IN2
Number_Data[1] => Mux0.IN12
Number_Data[1] => Mux1.IN12
Number_Data[1] => Mux2.IN12
Number_Data[1] => Mux3.IN12
Number_Data[1] => Mux4.IN12
Number_Data[1] => Mux5.IN12
Number_Data[1] => Mux6.IN12
Number_Data[2] => Decoder0.IN1
Number_Data[2] => Mux0.IN11
Number_Data[2] => Mux1.IN11
Number_Data[2] => Mux2.IN11
Number_Data[2] => Mux3.IN11
Number_Data[2] => Mux4.IN11
Number_Data[2] => Mux5.IN11
Number_Data[2] => Mux6.IN11
Number_Data[3] => Decoder0.IN0
Number_Data[3] => Mux0.IN10
Number_Data[3] => Mux1.IN10
Number_Data[3] => Mux2.IN10
Number_Data[3] => Mux3.IN10
Number_Data[3] => Mux4.IN10
Number_Data[3] => Mux5.IN10
Number_Data[3] => Mux6.IN10
SMG_Data[0] <= rSMG[0].DB_MAX_OUTPUT_PORT_TYPE
SMG_Data[1] <= rSMG[1].DB_MAX_OUTPUT_PORT_TYPE
SMG_Data[2] <= rSMG[2].DB_MAX_OUTPUT_PORT_TYPE
SMG_Data[3] <= rSMG[3].DB_MAX_OUTPUT_PORT_TYPE
SMG_Data[4] <= rSMG[4].DB_MAX_OUTPUT_PORT_TYPE
SMG_Data[5] <= rSMG[5].DB_MAX_OUTPUT_PORT_TYPE
SMG_Data[6] <= rSMG[6].DB_MAX_OUTPUT_PORT_TYPE
SMG_Data[7] <= rSMG[7].DB_MAX_OUTPUT_PORT_TYPE


|usb_seg_top|smg_interface:smg_interface_u|smg_scan_module:U3
CLK => rScan[0].CLK
CLK => rScan[1].CLK
CLK => rScan[2].CLK
CLK => i[0].CLK
CLK => i[1].CLK
CLK => i[2].CLK
CLK => i[3].CLK
CLK => C1[0].CLK
CLK => C1[1].CLK
CLK => C1[2].CLK
CLK => C1[3].CLK
CLK => C1[4].CLK
CLK => C1[5].CLK
CLK => C1[6].CLK
CLK => C1[7].CLK
CLK => C1[8].CLK
CLK => C1[9].CLK
CLK => C1[10].CLK
CLK => C1[11].CLK
CLK => C1[12].CLK
CLK => C1[13].CLK
CLK => C1[14].CLK
CLK => C1[15].CLK
RSTn => C1[0].ACLR
RSTn => C1[1].ACLR
RSTn => C1[2].ACLR
RSTn => C1[3].ACLR
RSTn => C1[4].ACLR
RSTn => C1[5].ACLR
RSTn => C1[6].ACLR
RSTn => C1[7].ACLR
RSTn => C1[8].ACLR
RSTn => C1[9].ACLR
RSTn => C1[10].ACLR
RSTn => C1[11].ACLR
RSTn => C1[12].ACLR
RSTn => C1[13].ACLR
RSTn => C1[14].ACLR
RSTn => C1[15].ACLR
RSTn => rScan[0].ACLR
RSTn => rScan[1].ACLR
RSTn => rScan[2].ACLR
RSTn => i[0].ACLR
RSTn => i[1].ACLR
RSTn => i[2].ACLR
RSTn => i[3].ACLR
Scan_Sig[0] <= rScan[0].DB_MAX_OUTPUT_PORT_TYPE
Scan_Sig[1] <= rScan[1].DB_MAX_OUTPUT_PORT_TYPE
Scan_Sig[2] <= rScan[2].DB_MAX_OUTPUT_PORT_TYPE


